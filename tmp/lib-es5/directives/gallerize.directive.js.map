{"version":3,"sources":["../../directives/gallerize.directive.ts"],"names":[],"mappings":"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","file":"gallerize.directive.js","sourceRoot":"","sourcesContent":["import { Directive, ElementRef, Renderer2, Input, OnInit, OnDestroy } from '@angular/core';\nimport { Gallery } from '../services/gallery.service';\nimport { GalleryItem } from '../models/index';\n\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/observable/fromEvent';\nimport'rxjs/add/observable/from';\nimport'rxjs/add/operator/map';\nimport'rxjs/add/operator/finally';\nexport class GallerizeDirective implements OnInit, OnDestroy {\n/**\n * gallerize images with specific classes\n */\ngallerize: string;\n  observer: MutationObserver;\n/**\n * @param {?} el\n * @param {?} renderer\n * @param {?} gallery\n */\nconstructor(public el: ElementRef,\npublic renderer: Renderer2,\npublic gallery: Gallery) {\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n\n    /** Observe content changes */\n\n    this.observer = new MutationObserver((mutations: MutationRecord[]) => {\n      mutations.forEach((mutation: MutationRecord) => {\n\n          const /** @type {?} */ images: GalleryItem[] = [];\n/**\n * Serialize img classes\n */\nconst classes = (this.gallerize) ? this.gallerize.split(' ').map((className) => '.' + className) : '';\n/**\n * get all img elements from content\n */\nconst imageElements = this.el.nativeElement.querySelectorAll('img' + classes);\n\n          if (imageElements) {\n            Observable.from(imageElements)\n              .map((img: HTMLImageElement, i) => {\n\n                /** Add click event to the image */\n                this.renderer.setStyle(img, 'cursor', 'pointer');\n                this.renderer.setProperty(img, 'onclick', () => this.gallery.open(i));\n\n                /** Create image item for the gallery */\n                images.push({\n                  src: img.src,\n                  text: img.alt\n                });\n              })\n              .finally(() => this.gallery.load(images))\n              .subscribe();\n          }\n        }\n      );\n    });\n\n    const /** @type {?} */ config: MutationObserverInit = {\n      attributes: true,\n      childList: true,\n      characterData: true\n    };\n\n    this.observer.observe(this.el.nativeElement, config);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.observer.disconnect();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[gallerize]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: Gallery, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'gallerize': [{ type: Input },],\n};\n}\n\nfunction GallerizeDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nGallerizeDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGallerizeDirective.ctorParameters;\n/** @type {?} */\nGallerizeDirective.propDecorators;\n/**\n * gallerize images with specific classes\n * @type {?}\n */\nGallerizeDirective.prototype.gallerize;\n/** @type {?} */\nGallerizeDirective.prototype.observer;\n/** @type {?} */\nGallerizeDirective.prototype.el;\n/** @type {?} */\nGallerizeDirective.prototype.renderer;\n/** @type {?} */\nGallerizeDirective.prototype.gallery;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}