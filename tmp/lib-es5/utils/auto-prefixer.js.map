{"version":3,"sources":["../../utils/auto-prefixer.ts"],"names":[],"mappings":"AACA;;;;;;;;;;;;;GAaG;AACH,MAHC,2BAAA,MAAA;IAIC,GAAG,CAAC,CAAC,IAHC,gBAAA,CAAK,GAAA,IAAO,MAAA,CAAO,CAAC,CAAA;QAIxB,IAAI,gBAAgB,CAHhB,KAAA,GAAQ,MAAA,CAAO,GAAC,CAAG,IAAI,EAAA,CAAG;QAK9B,MAAM,CAAC,CAAC,GAHC,CAAG,CAAC,CAAA;YAIX,KAHK,SAAA;gBAIH,EAAE,CAAC,CAAC,KAHC,KAAS,MAAA,CAAO,CAAC,CAAA;oBAIpB,MAAM,CAHC,SAAC,CAAS,GAAG;wBAIlB,cAAc;wBACd,MAAM;qBACP,CAHC;gBAIJ,CAAC;gBAHC,IAAA,CAAK,EAAA,CAAA,CAAA,KAAK,KAAS,aAAA,CAAc,CAAC,CAAA;oBAIlC,MAAM,CAHC,SAAC,CAAS,GAAG;wBAIlB,qBAAqB;wBACrB,aAAa;qBACd,CAHC;gBAIJ,CAAC;gBAHC,IAAA,CAAK,CAAA;oBAIL,MAAM,CAHC,SAAC,CAAS,GAAG,KAAA,CAAM;gBAI5B,CAAC;gBACD,KAAK,CAAC;YAER,KAHK,aAAA,CAAc;YAInB,KAHK,YAAA,CAAa;YAIlB,KAHK,eAAA,CAAgB;YAIrB,KAHK,MAAA,CAAO;YAIZ,KAHK,YAAA,CAAa;YAIlB,KAHK,WAAA,CAAY;YAIjB,KAHK,WAAA,CAAY;YAIjB,KAHK,aAAA,CAAc;YAInB,KAHK,WAAA,CAAY;YAIjB,KAHK,iBAAA;gBAIH,MAAM,CAHC,UAAC,GAAY,GAAA,CAAI,GAAG,KAAA,CAAM;gBAIjC,KAAK,CAAC;YAER,KAHK,gBAAA;gBAIH,KAAK,GAHG,KAAA,IAAS,KAAA,CAAM;gBAIvB,MAAM,CAHC,wBAAC,CAAwB,GAAG,KAAA,CAAM;gBAIzC,MAAM,CAHC,gBAAC,CAAgB,GAAG,KAAA,CAAM;gBAIjC,KAAK,CAAC;YAER,KAHK,OAAA;gBAIH,MAAM,CAHC,OAAC,CAAO,GAAG,MAAA,CAAO,UAAC,GAAY,GAAA,CAAI,GAAG,KAAA,CAAM,KAAC,CAAK,GAAG,GAAA,GAAM,KAAA,CAAM;gBAIxE,KAAK,CAAC;QACV,CAAC;IACH,CAAC;IACD,MAAM,CAHC,MAAA,CAAO;AAIhB,CAAC;AAED,gDAAgD;AAChD,4BAA4B;AAC5B,8CAA8C;AAC9C,sCAAsC;AACtC,mBAAmB;AACnB,IAAI","file":"auto-prefixer.js","sourceRoot":"","sourcesContent":["\n/**\n * Applies CSS prefixes to appropriate style keys.\n * \n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n * @param {?} target\n * @return {?}\n */\nexport function applyCssPrefixes(target) {\n  for (const /** @type {?} */ key in target) {\n    let /** @type {?} */ value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n\n// function prefixFlexDirection(target, value) {\n//   value = value || 'row';\n//   target['-webkit-flex-direction'] = value;\n//   target['flex-direction'] = value;\n//   return target;\n// }\n"]}