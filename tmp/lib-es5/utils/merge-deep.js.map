{"version":3,"sources":["../../utils/merge-deep.ts"],"names":[],"mappings":"AACA;;;;GAIG;AACH,kBADC,IAAA;IAEC,MAAM,CADC,CAAA,IAAE,IAAO,OAAO,IAAA,KAAS,QAAA,IAAY,CAAA,KAAE,CAAK,OAAC,CAAO,IAAC,CAAI,CAAC,CAAC;AAEpE,CAAC;AACD;;;;;GAKG;AACH,MADC,oBAAA,MAAA;IAAA,iBAAA;SAAA,UAAA,EAAA,qBAAA,EAAA,IAAA;QAAA,gCAAA;;IAEC,EAAE,CAAC,CAAC,CADC,OAAC,CAAO,MAAC,CAAM,CAAC,CAAA;QAEnB,MAAM,CADC,MAAA,CAAO;IAEhB,CAAC;IACD,IAAM,gBAAgB,CADhB,MAAA,GAAS,OAAA,CAAQ,KAAC,EAAK,CAAE;IAG/B,EAAE,CAAC,CAAC,QADC,CAAQ,MAAC,CAAM,IAAI,QAAA,CAAS,MAAC,CAAM,CAAC,CAAC,CAAA;QAExC,GAAG,CAAC,CAAC,IADC,gBAAA,CAAK,GAAA,IAAO,MAAA,CAAO,CAAC,CAAA;YAExB,EAAE,CAAC,CAAC,QADC,CAAQ,MAAC,CAAM,GAAC,CAAG,CAAC,CAAC,CAAC,CAAA;gBAEzB,EAAE,CAAC,CAAC,CADC,MAAC,CAAM,GAAC,CAAG,CAAC,CAAC,CAAA;oBAEhB,MAAM,CADC,MAAC,CAAM,MAAC,YAAO,GAAE,GAAC,IAAK,EAAA,MAAI,CAAC;gBAErC,CAAC;gBACD,SAAS,CADC,MAAC,CAAM,GAAC,CAAG,EAAE,MAAA,CAAO,GAAC,CAAG,CAAC,CAAC;YAEtC,CAAC;YADC,IAAA,CAAK,CAAA;gBAEL,MAAM,CADC,MAAC,CAAM,MAAC,YAAO,GAAE,GAAC,IAAK,MAAA,CAAO,GAAC,CAAG,MAAE,CAAC;YAE9C,CAAC;QACH,CAAC;IACH,CAAC;IAED,MAAM,CADC,SAAA,gBAAU,MAAC,SAAO,OAAI,GAAQ;;AAEvC,CAAC","file":"merge-deep.js","sourceRoot":"","sourcesContent":["\n/**\n * Simple object check.\n * @param {?} item\n * @return {?}\n */\nfunction isObject(item) {\n  return (item && typeof item === 'object' && !Array.isArray(item));\n}\n/**\n * Deep merge two objects.\n * @param {?} target\n * @param {...?} sources\n * @return {?}\n */\nexport function mergeDeep(target, ...sources) {\n  if (!sources.length) {\n    return target;\n  }\n  const /** @type {?} */ source = sources.shift();\n\n  if (isObject(target) && isObject(source)) {\n    for (const /** @type {?} */ key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) {\n          Object.assign(target, {[key]: {}});\n        }\n        mergeDeep(target[key], source[key]);\n      } else {\n        Object.assign(target, {[key]: source[key]});\n      }\n    }\n  }\n\n  return mergeDeep(target, ...sources);\n}\n"]}