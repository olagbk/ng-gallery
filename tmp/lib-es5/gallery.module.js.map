{"version":3,"sources":["../gallery.module.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAA,EAA8B,MAAA,eAAA,CAAA;AACvC,OAAO,EAAE,YAAA,EAAa,MAAA,iBAAA,CAAA;AACtB,OAAO,EAAE,aAAA,EAAe,OAAA,EAAQ,MAAA,sBAAA,CAAA;AAChC,OAAO,EAAE,aAAA,EAAc,MAAA,wBAAA,CAAA;AAEvB,OAAO,EAAE,OAAA,EAAQ,MAAA,4BAAA,CAAA;AAEjB,OAAO,EAAE,MAAA,EAAO,MAAA,0BAAA,CAAA;AAEhB,OAAO,EAAE,gBAAA,EAAiB,MAAA,wCAAA,CAAA;AAC1B,OAAO,EAAE,mBAAA,EAAoB,MAAA,gDAAA,CAAA;AAC7B,OAAO,EAAE,qBAAA,EAAsB,MAAA,oDAAA,CAAA;AAC/B,OAAO,EAAE,oBAAA,EAAqB,MAAA,kDAAA,CAAA;AAC9B,OAAO,EAAE,qBAAA,EAAsB,MAAA,oDAAA,CAAA;AAC/B,OAAO,EAAE,sBAAA,EAAuB,MAAA,sDAAA,CAAA;AAChC,OAAO,EAAE,uBAAA,EAAwB,MAAA,wDAAA,CAAA;AACjC,OAAO,EAAE,sBAAA,EAAuB,MAAA,sDAAA,CAAA;AAChC,OAAO,EAAE,oBAAA,EAAqB,MAAA,kDAAA,CAAA;AAC9B,OAAO,EAAE,sBAAA,EAAuB,MAAA,sDAAA,CAAA;AAChC,OAAO,EAAE,wBAAA,EAAyB,MAAA,0DAAA,CAAA;AAElC,OAAO,EAAE,kBAAA,EAAmB,MAAA,kCAAA,CAAA;AAC5B,OAAO,EAAE,YAAA,EAAa,MAAA,4BAAA,CAAA;AACtB,OAAO,EAAE,aAAA,EAAc,MAAA,6BAAA,CAAA;AACvB;;;;;;;GAOG;AACH,MADC,yBAAA,MAAA,EAAA,OAAA,EAAA,aAAA;IAEC,MAAM,CADC,IAAI,OAAA,CAAQ,MAAC,EAAO,OAAA,EAAS,aAAA,CAAc,CAAC;AAErD,CAAC;AACD;IAAA;IAuDA,CAAC;IAtDD;;;OAGG;IAFA,qBAAA,GAGH,UAHG,MAAA;QAKC,MAAM,CAHC;YAIL,QAAQ,EAHE,aAAA;YAIV,SAAS,EAHE;gBAIT,EAAC,OAHC,EAAQ,MAAA,EAAQ,QAAA,EAAU,MAAA,EAAO;gBAInC;oBACE,OAAO,EAHE,OAAA;oBAIT,UAAU,EAHE,cAAA;oBAIZ,IAAI,EAHE,CAAA,MAAE,EAAO,OAAA,EAAS,aAAA,CAAc;iBAIvC;aACF;SACF,CAHC;IAIJ,CAAC;IAqCH,oBAAC;AAAD,CAvDA,AAuDC;;AAvCM,wBAAA,GAAoC;IAI3C,EAHE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA;gBAItB,OAAO,EAHE;oBAIP,YAAY;oBACZ,aAAa;iBACd;gBACD,YAAY,EAHE;oBAIZ,gBAAgB;oBAChB,mBAAmB;oBACnB,qBAAqB;oBACrB,oBAAoB;oBACpB,qBAAqB;oBACrB,sBAAsB;oBACtB,uBAAuB;oBACvB,sBAAsB;oBACtB,oBAAoB;oBACpB,sBAAsB;oBACtB,wBAAwB;oBACxB,kBAAkB;oBAClB,YAAY;oBACZ,aAAa;iBACd;gBACD,OAAO,EAHE;oBAIP,gBAAgB;oBAChB,kBAAkB;iBACnB;gBACD,eAAe,EAHE;oBAIf,wBAAwB;iBACzB;aACF,EAHC,EAAG;CAIJ,CAHC;AAIF;;GAEG;AAJF,4BAAA,GAAA,cAAA,OAAA,EAMA,EANA,CAMA,CAAC;AAGF;IACA,gBAAgB;IAChB,aAAa,CAAC,UAAU,CAAC;IACzB;;;OAGG;IACH,aAAa,CAAC,cAAc,CAAC;AAC7B,CAAC","file":"gallery.module.js","sourceRoot":"","sourcesContent":["import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OverlayModule, Overlay } from '@angular/cdk/overlay';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\n\nimport { Gallery } from './services/gallery.service';\nimport { GalleryConfig } from './models/index';\nimport { CONFIG } from './services/gallery.token';\n\nimport { GalleryComponent } from './components/gallery/gallery.component';\nimport { GalleryNavComponent } from './components/gallery-nav/gallery-nav.component';\nimport { GalleryThumbComponent } from './components/gallery-thumb/gallery-thumb.component';\nimport { GalleryTextComponent } from './components/gallery-text/gallery-text.component';\nimport { GalleryItemsComponent } from './components/gallery-items/gallery-items.component';\nimport { GalleryLoaderComponent } from './components/gallery-loader/gallery-loader.component';\nimport { GalleryBulletsComponent } from './components/gallery-bullets/gallery-bullets.component';\nimport { GalleryPlayerComponent } from './components/gallery-player/gallery-player.component';\nimport { GalleryMainComponent } from './components/gallery-main/gallery-main.component';\nimport { GallerySliderComponent } from './components/gallery-slider/gallery-slider.component';\nimport { GalleryLightboxComponent } from './components/gallery-lightbox/gallery-lightbox.component';\n\nimport { GallerizeDirective } from './directives/gallerize.directive';\nimport { TapDirective } from './directives/tap.directive';\nimport { LazyDirective } from './directives/lazy.directive';\n/**\n * Initialize Gallery with custom config\n * \n * @param {?} config\n * @param {?} overlay\n * @param {?} viewportRuler\n * @return {?}\n */\nexport function galleryFactory(config: GalleryConfig, overlay: Overlay, viewportRuler: ViewportRuler) {\n  return new Gallery(config, overlay, viewportRuler);\n}\nexport class GalleryModule {\n/**\n * @param {?=} config\n * @return {?}\n */\nstatic forRoot(config?: GalleryConfig): ModuleWithProviders {\n\n    return {\n      ngModule: GalleryModule,\n      providers: [\n        {provide: CONFIG, useValue: config},\n        {\n          provide: Gallery,\n          useFactory: galleryFactory,\n          deps: [CONFIG, Overlay, ViewportRuler]\n        }\n      ]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    OverlayModule\n  ],\n  declarations: [\n    GalleryComponent,\n    GalleryNavComponent,\n    GalleryThumbComponent,\n    GalleryTextComponent,\n    GalleryItemsComponent,\n    GalleryLoaderComponent,\n    GalleryBulletsComponent,\n    GalleryPlayerComponent,\n    GalleryMainComponent,\n    GallerySliderComponent,\n    GalleryLightboxComponent,\n    GallerizeDirective,\n    TapDirective,\n    LazyDirective\n  ],\n  exports: [\n    GalleryComponent,\n    GallerizeDirective\n  ],\n  entryComponents: [\n    GalleryLightboxComponent\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction GalleryModule_tsickle_Closure_declarations() {\n/** @type {?} */\nGalleryModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGalleryModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}